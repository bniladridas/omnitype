name: CI
permissions:
  contents: read

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Weekly security updates check
    - cron: '0 0 * * 0'

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings
  RUST_BACKTRACE: 1

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      
      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Check formatting
        run: cargo fmt -- --check
      
      - name: Run Clippy
        run: cargo clippy -- -D warnings
      
      - name: Install nightly toolchain for cargo-udeps
        uses: dtolnay/rust-toolchain@nightly
      
      - name: Install cargo-udeps
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-udeps
      
      - name: Check for unused dependencies
        run: cargo +nightly udeps --all-targets
      
      - name: Audit dependencies
        uses: actions-rust-lang/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: Test Suite
    needs: check
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
      
      - name: Install cargo-tarpaulin
        if: matrix.os == 'ubuntu-latest'
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-tarpaulin
      
      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Run tests
        run: cargo test --workspace -- --test-threads=1 --nocapture
      
      - name: Generate test coverage (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install -y libssl-dev pkg-config
          cargo tarpaulin --out Xml --output-dir target/tarpaulin
        continue-on-error: true
      
      - name: Upload coverage to Codecov (Linux only)
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v5
        with:
          files: ./target/tarpaulin/cobertura.xml
          fail_ci_if_error: false
          use_oidc: true

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      issues: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Run cargo-audit
        uses: actions-rust-lang/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --deny warnings
